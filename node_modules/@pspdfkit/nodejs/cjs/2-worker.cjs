/*!
 * PSPDFKit for Node.js 0.0.3 (https://pspdfkit.com/nodejs)
 *
 * Copyright (c) 2023 PSPDFKit GmbH. All rights reserved.
 *
 * THIS SOURCE CODE AND ANY ACCOMPANYING DOCUMENTATION ARE PROTECTED BY INTERNATIONAL COPYRIGHT LAW
 * AND MAY NOT BE RESOLD OR REDISTRIBUTED. USAGE IS BOUND TO THE PSPDFKIT LICENSE AGREEMENT.
 * UNAUTHORIZED REPRODUCTION OR DISTRIBUTION IS SUBJECT TO CIVIL AND CRIMINAL PENALTIES.
 * This notice may not be removed from this file.
 *
 * PSPDFKit uses several open source third-party components: https://pspdfkit.com/acknowledgements/nodejs/
 */"use strict";var o,E,import_meta_url=require("url").pathToFileURL(__filename),e={BUNDLE:"/vendor",BACKEND_BUILD:"true",GDPICTURE_HASH:"1ffebe20dea1402281b74ef0efe867af52331c9a"},x=function t(r){let a;return Object.setPrototypeOf(a=r instanceof Error?r:Error(r),t.prototype),a};x.prototype=Object.create(Error.prototype,{name:{value:"PSPDFKitError",enumerable:!1}});var _=x;function d(t,r){if(!t)throw new _(`Assertion failed: ${r||"Condition not met"}

For further assistance, please go to: https://pspdfkit.com/support/request`)}var I={};function y(){return E||(e.STANDALONE_NATIVE&&(console.log("Creating UWP Bridge"),E=new I),E)}function u(t){e.STANDALONE_NATIVE?y().log(t):console.log(t)}function F(t){e.STANDALONE_NATIVE?y().error(JSON.stringify(t)):console.error(t)}var N=["a[href]","area[href]","input:not([disabled])","select:not([disabled])","textarea:not([disabled])","button:not([disabled])","iframe","object","embed","[contenteditable]",'[tabindex]:not([tabindex^="-"])'],h=N.join(",");async function O(t,r){let a;if("string"!=typeof t)return{initDotnet:a}=await import(t.wasmLoaderPath),a(t.baseUrl);{let a=`${e.BUNDLE}/`,n=`${a}gdpicture-${e.GDPICTURE_HASH}/jit`,i=`${n}/initDotnet.js`,s=`${a}gdpicture-${e.GDPICTURE_HASH}/aot`,f=`${s}/initDotnet.js`,p,m;r?(p=`${t}${f}`,m=`${t}${s}`):(p=`${t}${i}`,m=`${t}${n}`);let{initDotnet:S}=await import(p);return S(m)}}var b=((o=b||{})[o.pdf_a_1a=0]="pdf_a_1a",o[o.pdf_a_1b=1]="pdf_a_1b",o[o.pdf_a_2a=2]="pdf_a_2a",o[o.pdf_a_2u=3]="pdf_a_2u",o[o.pdf_a_2b=4]="pdf_a_2b",o[o.pdf_a_3a=5]="pdf_a_3a",o[o.pdf_a_3u=6]="pdf_a_3u",o[o.pdf_a_3b=7]="pdf_a_3b",o[o.pdf_a_4=8]="pdf_a_4",o[o.pdf_a_4e=9]="pdf_a_4e",o[o.pdf_a_4f=10]="pdf_a_4f",o),R="/create.pdf",A="/save.pdf",K="WebAssembly module not loaded.",g=!1,pt="u">typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope,l=null,D=null;function T(t,...r){let a,n;for(let i of(d(D,"GdPicture WebAssembly is not loaded."),g&&(a=performance.now(),u(`Request: ${t}(${r.map(t=>JSON.stringify(t)).join(", ")})`)),r))n=Object.assign(r[0],i);let i=JSON.stringify({type:t,...n}),s=JSON.parse(D.CommandHandler(i));if(g&&(d("number"==typeof a),u(`Response from ${t} (${(performance.now()-a).toFixed(2)} ms): ${JSON.stringify(s)}`)),!s.success)throw Error(s.errorReason+": "+s.errorMessage+`
`+s.error);return s}var c=class{async _mountCustomFonts(t,r){d(l,K),l.FS.mkdir(r),t.forEach(t=>{l.FS.writeFile(`${r}/${t.name}`,new Uint8Array(t.data))})}async loadModule(t,r,a,n,i){let s;g&&(s=performance.now(),u("loading GdPicture WASM"));let{Assemblies:f,Module:p}=await O(t,r);D=f.GdPictureWasm.API,l=p,g&&(d("number"==typeof s),u(`Finished Loading GdPicture WASM (${(performance.now()-s).toFixed(2)} ms)`)),T("gdpicture/setLicense",{origin:a},{licenseKey:n||"DEMO_PSPDFKIT_WEB"});let m=i?"/fonts":"";i&&!l.FS.analyzePath(m).exists&&(await this._mountCustomFonts(i,m),T("gdpicture/setFonts",{fontPaths:[m]}))}toPdf(t,r){l.FS.writeFile(R,new Uint8Array(t));let a={file:A};r&&r in b&&(a.conformance=r);try{return T("gdpicture/process",{input:{file:R},output:a}),l.FS.readFile(A).buffer}finally{try{l.FS.unlink(A)}catch{}}}},C=new c;self.onmessage=async({data:t})=>{let r,a;try{let n=await C[t.action](...t.args);if(r={id:t.id,result:n},Array.isArray(n)){let t=n.filter(t=>t instanceof ArrayBuffer);t.length>0&&(a=t)}n instanceof ArrayBuffer&&(a=[n])}catch(i){let n=[...t.args].filter(t=>t instanceof ArrayBuffer);n.length>0&&(a=n),F("[PSPDFKit Internal Debug]",i.message,i.stack),r={id:t.id,error:i.message||i.toString(),callArgs:t.args}}self.postMessage(r,a)};